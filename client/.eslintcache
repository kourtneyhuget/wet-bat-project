[{"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/index.js":"1","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/App.js":"2","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/MainPage.jsx":"3","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/Header.jsx":"4","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/QuickQuote.jsx":"5","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/CreateAQuote.jsx":"6"},{"size":172,"mtime":1608140354125,"results":"7","hashOfConfig":"8"},{"size":300,"mtime":1608140265254,"results":"9","hashOfConfig":"8"},{"size":376,"mtime":1608183057629,"results":"10","hashOfConfig":"8"},{"size":0,"mtime":1608051073582,"results":"11","hashOfConfig":"8"},{"size":7640,"mtime":1608173613186,"results":"12","hashOfConfig":"8"},{"size":3295,"mtime":1608168707300,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1f71uar",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/index.js",[],["29","30"],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/App.js",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/MainPage.jsx",["31"],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/Header.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/QuickQuote.jsx",["32"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"../styles/QuickQuote.scss\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CreateAQuote } from \"./CreateAQuote\";\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\n\n//drop down options for tranportation text field\nconst transportations = [\n  {\n    value: \"none\",\n    label: \"none\",\n  },\n  {\n    value: \"shuttle\",\n    label: \"shuttle\",\n  },\n  {\n    value: \"rental car\",\n    label: \"rental car\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"18ch\",\n    },\n  },\n}));\n\n// custom brand colours\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#5BBFBA\",\n    },\n    secondary: {\n      main: \"#5F6CAF\",\n    },\n  },\n});\n\nexport function QuickQuote() {\n  const classes = useStyles();\n  const [transportation, setTransportation] = useState(\"Transportation\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [departLocation, setDepartLocation] = useState(\"\");\n  const [returnLocation, setReturnLocation] = useState(\"\");\n  const [departDate, setDepartDate] = useState(\"\");\n  const [returnDate, setReturnDate] = useState(\"\");\n  const [travelers, setTravelers] = useState(\"\");\n\n  const handleChange = (event) => {\n    setTransportation(event.target.value);\n  };\n\n  const changeFirstName = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const changeLastName = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const changeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const changePhoneNumber = (event) => {\n    setPhoneNumber(event.target.value);\n  };\n\n  const changeDepartLocation = (event) => {\n    setDepartLocation(event.target.value);\n  };\n\n  const changeReturnLocation = (event) => {\n    setReturnLocation(event.target.value);\n  };\n\n  const changeDepartDate = (event) => {\n    setDepartDate(event.target.value);\n  };\n\n  const changeReturnDate = (event) => {\n    setReturnDate(event.target.value);\n  };\n\n  const changeTravelers = (event) => {\n    setTravelers(event.target.value);\n  };\n\n  // const validate = () => {\n  //   if (firstName === \"\") {\n  //     setError;\n  //     (\"Name cannot be blank\");\n  //   }\n  // };\n\n  function submitQuote(event) {\n    event.preventDefault();\n    axios\n      .put(\"/api/quotes\", {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phoneNumber: phoneNumber,\n      })\n      .then((res) => {\n        axios.put(\"/api/quotes\", {\n          departLocation: departLocation,\n          returnLocation: returnLocation,\n          departDate: departDate,\n          returnDate: returnDate,\n          travelers: travelers,\n          clientId: res,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error: \", error);\n      });\n  }\n\n  return (\n    <div className=\"quick-quote-container\">\n      <ThemeProvider theme={theme}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <div className=\"client-information\">\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-textarea\"\n              label=\"First Name\"\n              onChange={changeFirstName}\n              value={firstName}\n              placeholder=\"First Name\"\n              multiline\n              variant=\"outlined\"\n            />\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-textarea\"\n              label=\"Last Name\"\n              onChange={changeLastName}\n              value={lastName}\n              placeholder=\"Last Name\"\n              multiline\n              variant=\"outlined\"\n            />\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-textarea\"\n              label=\"Email\"\n              onChange={changeEmail}\n              value={email}\n              placeholder=\"Email\"\n              multiline\n              variant=\"outlined\"\n            />\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-textarea\"\n              label=\"Phone Number\"\n              onChange={changePhoneNumber}\n              value={phoneNumber}\n              placeholder=\"Phone Number\"\n              multiline\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"travel-information\">\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-textarea\"\n              label=\"Departure Location\"\n              onChange={changeDepartLocation}\n              value={departLocation}\n              placeholder=\"Enter Airport\"\n              multiline\n              variant=\"outlined\"\n            />\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-textarea\"\n              label=\"Desination Location\"\n              onChange={changeReturnLocation}\n              value={returnLocation}\n              placeholder=\"Enter Airport\"\n              multiline\n              variant=\"outlined\"\n            />\n            <TextField\n              color=\"secondary\"\n              id=\"date\"\n              label=\"Departure Date\"\n              onChange={changeDepartDate}\n              value={departDate}\n              type=\"date\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n            />\n            <TextField\n              color=\"secondary\"\n              id=\"date\"\n              label=\"Return Date\"\n              onChange={changeReturnDate}\n              value={returnDate}\n              type=\"date\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n            />\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-textarea\"\n              label=\"Travelers\"\n              onChange={changeTravelers}\n              value={travelers}\n              placeholder=\"Travelers\"\n              multiline\n              variant=\"outlined\"\n            />\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-select-currency-native\"\n              select\n              label=\"Transportation\"\n              value={transportation}\n              onChange={handleChange}\n              SelectProps={{\n                native: true,\n              }}\n              variant=\"outlined\"\n            >\n              {transportations.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              color=\"secondary\"\n              id=\"outlined-textarea\"\n              label=\"Price\"\n              onChange={changeTravelers}\n              value={travelers}\n              placeholder=\"$\"\n              multiline\n              variant=\"outlined\"\n              width=\"50%\"\n            />\n          </div>\n          <div className=\"pop-up-quote\">\n            <Button\n              onSubmit={submitQuote}\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n            >\n              Submit the quote\n            </Button>\n          </div>\n        </form>\n      </ThemeProvider>\n    </div>\n  );\n}\n","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/CreateAQuote.jsx",["33","34","35","36"],"import React, { useEffect, useState } from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { Modal } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\n\n//TEST THIS OUT\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\n//not pure function, need to style on first render\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#5BBFBA\",\n    },\n    secondary: {\n      main: \"#5F6CAF\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    borderRadius: \"15px\",\n    padding: theme.spacing(2, 4, 3),\n  },\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: \"25ch\",\n  },\n}));\n\nexport function CreateAQuote() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const [price, setPrice] = useState(\"\");\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const changePrice = (event) => {\n    setPrice(event.target.value);\n  };\n\n  // function submitPrice(event) {\n  //   event.preventDefault();\n  //   axios.put(\"/api/price\", {\n  //     price: price,\n  //   });\n  //   .catch((error) => {\n  //     console.error('Error: ', error)\n  //   })\n  // }\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Please enter cost of the package</h2>\n      <FormControl\n        fullWidth\n        className={classes.margin}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-amount\"\n          value={price}\n          onChange={changePrice}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          labelWidth={60}\n        />\n      </FormControl>\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        size=\"large\"\n        color=\"primary\"\n      >\n        Submit the quote\n      </Button>\n    </div>\n  );\n  return (\n    <div>\n      <Button\n        onClick={handleOpen}\n        variant=\"contained\"\n        size=\"large\"\n        color=\"primary\"\n      >\n        Create a quote\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":14},{"ruleId":"41","severity":1,"message":"45","line":7,"column":10,"nodeType":"43","messageId":"44","endLine":7,"endColumn":22},{"ruleId":"41","severity":1,"message":"46","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"47","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":23},{"ruleId":"41","severity":1,"message":"48","line":11,"column":8,"nodeType":"43","messageId":"44","endLine":11,"endColumn":13},{"ruleId":"41","severity":1,"message":"49","line":30,"column":7,"nodeType":"43","messageId":"44","endLine":30,"endColumn":12},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'CreateAQuote' is defined but never used.","'useEffect' is defined but never used.","'ThemeProvider' is defined but never used.","'axios' is defined but never used.","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]