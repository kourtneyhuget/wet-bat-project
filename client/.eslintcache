[{"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/index.js":"1","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/App.js":"2","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/MainPage.jsx":"3","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/Header.jsx":"4","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/QuickQuote.jsx":"5","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/PendingQuotes.jsx":"6","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/CompletedQuotes.jsx":"7"},{"size":172,"mtime":1608140354125,"results":"8","hashOfConfig":"9"},{"size":300,"mtime":1608140265254,"results":"10","hashOfConfig":"9"},{"size":392,"mtime":1608250057709,"results":"11","hashOfConfig":"9"},{"size":6770,"mtime":1608227293472,"results":"12","hashOfConfig":"9"},{"size":8837,"mtime":1608250023351,"results":"13","hashOfConfig":"9"},{"size":4214,"mtime":1608250060329,"results":"14","hashOfConfig":"9"},{"size":2169,"mtime":1608249139614,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1f71uar",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/index.js",[],["32","33"],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/App.js",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/MainPage.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/Header.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/QuickQuote.jsx",["34","35"],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/PendingQuotes.jsx",["36","37"],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/CompletedQuotes.jsx",["38"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"10%\",\n    height: \"20%\",\n  },\n});\n\nexport function CompletedQuotes() {\n  const classes = useStyles();\n  const [completed, setCompleted] = useState([]);\n\n  // function subtotal(items) {\n  //   return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\n  // }\n\n  // function ccyFormat(num) {\n  //   return `${num.toFixed(2)}`;\n  // }\n\n  // const invoiceSubtotal = subtotal();\n\n  //render all completed quotes\n  const getCompleted = async (event) => {\n    try {\n      const response = await fetch(\"/api/completed\");\n      const jsonData = await response.json();\n      setCompleted(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getCompleted();\n  }, []);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" colSpan={5}>\n              CONVERTED QUOTES TO SERVICES\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell></TableCell>\n            <TableCell>PHONE</TableCell>\n            <TableCell>PRICE</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {completed.map((quote) => (\n            <TableRow key={quote.id}>\n              <TableCell>{quote.first_name}</TableCell>\n              <TableCell>{quote.last_name}</TableCell>\n              <TableCell>{quote.phone_number}</TableCell>\n              <TableCell>{quote.price}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":2,"message":"44","line":157,"column":11,"nodeType":"45","messageId":"46","endLine":157,"endColumn":13},{"ruleId":"47","severity":2,"message":"48","line":157,"column":11,"nodeType":"49","messageId":"50","endLine":157,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"49","messageId":"53","endLine":1,"endColumn":13},{"ruleId":"51","severity":1,"message":"54","line":42,"column":10,"nodeType":"49","messageId":"53","endLine":42,"endColumn":20},{"ruleId":"51","severity":1,"message":"55","line":19,"column":9,"nodeType":"49","messageId":"53","endLine":19,"endColumn":16},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'g' is not defined.","Identifier","undef","no-unused-vars","'Axios' is defined but never used.","unusedVar","'selectedId' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]