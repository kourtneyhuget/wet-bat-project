[{"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/index.js":"1","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/App.js":"2","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/MainPage.jsx":"3","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/Header.jsx":"4","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/QuickQuote.jsx":"5","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/PendingQuotes.jsx":"6","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/CompletedQuotes.jsx":"7","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/SideNav.jsx":"8","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/DashboardGreeting.jsx":"9","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/PotentialRevenue.jsx":"10","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/NewLeads.jsx":"11","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/DetailedQuotes.jsx":"12","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/Revenue.jsx":"13","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/TeamChat.jsx":"14"},{"size":175,"mtime":1608257891056,"results":"15","hashOfConfig":"16"},{"size":445,"mtime":1608426335139,"results":"17","hashOfConfig":"16"},{"size":2023,"mtime":1608423552957,"results":"18","hashOfConfig":"16"},{"size":4257,"mtime":1608423385919,"results":"19","hashOfConfig":"16"},{"size":10482,"mtime":1608424042054,"results":"20","hashOfConfig":"16"},{"size":4742,"mtime":1608423692307,"results":"21","hashOfConfig":"16"},{"size":2728,"mtime":1608422705372,"results":"22","hashOfConfig":"16"},{"size":3394,"mtime":1608424095647,"results":"23","hashOfConfig":"16"},{"size":1752,"mtime":1608415164045,"results":"24","hashOfConfig":"16"},{"size":2428,"mtime":1608423741707,"results":"25","hashOfConfig":"16"},{"size":7711,"mtime":1608423604844,"results":"26","hashOfConfig":"16"},{"size":5601,"mtime":1608422865909,"results":"27","hashOfConfig":"16"},{"size":1741,"mtime":1608424052189,"results":"28","hashOfConfig":"16"},{"size":8305,"mtime":1608424126636,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1f71uar",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/index.js",[],["62","63"],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/App.js",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/MainPage.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/Header.jsx",["64","65","66"],"import React from \"react\";\nimport { fade, makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport \"../styles/Header.scss\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\n// material ui - nav bar styling\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(135),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\n// custom brand colours\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#5BBFBA\",\n    },\n    secondary: {\n      main: \"#5F6CAF\",\n    },\n    text: {\n      primary: \"#FFFFFF\",\n    },\n  },\n});\n\nexport function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <ThemeProvider theme={theme}>\n        <AppBar color=\"secondary\" position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              <Link to=\"/\" className=\"wet-bat-travel-link\">\n                Wet Bat Travel\n              </Link>\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Searchâ€¦\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </div>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton color=\"inherit\">\n                <MailIcon />\n              </IconButton>\n              <IconButton color=\"inherit\">\n                <NotificationsIcon />\n              </IconButton>\n              <IconButton color=\"inherit\">\n                <AccountCircle />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton color=\"inherit\">\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </ThemeProvider>\n    </div>\n  );\n}\n","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/QuickQuote.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/PendingQuotes.jsx",["67"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport { Button } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport OpenWithIcon from \"@material-ui/icons/OpenWith\";\nimport \"../styles/PendingQuotes.scss\";\nimport { Link } from \"react-router-dom\";\n\n// material ui - table styling\nconst useStyles = makeStyles(() => ({\n  container: {\n    maxHeight: 550,\n  },\n}));\n\n// custom brand colors\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#5BBFBA\",\n    },\n    secondary: {\n      main: \"#5F6CAF\",\n    },\n    text: {\n      primary: \"#A9A9A9\",\n    },\n  },\n});\n\nexport function PendingQuotes(props) {\n  const classes = useStyles();\n  const [selectedId, setSelectedId] = useState([]);\n  const [pending, setPending] = useState([]);\n\n  const handleChange = (event) => {\n    setSelectedId(event.target.value);\n  };\n\n  //render all pending quotes\n  const getPending = async (event) => {\n    try {\n      const response = await fetch(\"/api/pending\");\n      const jsonData = await response.json();\n      setPending(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getPending();\n  }, [props.updatePending]);\n\n  // update pending quotes from is_converted false to true when \"close\" button is clicked\n  const moveTask = async (quoteId) => {\n    axios\n      .put(`api/quotescompleted/${quoteId}`, {\n        selectedId: quoteId,\n      })\n      .then((res) => {\n        setPending(pending.filter((quote) => quote.id !== quoteId));\n        props.updateCompletedQuotes();\n      })\n      .catch((error) => {\n        console.error(\"Error: \", error);\n      });\n  };\n\n  return (\n    <div className=\"pending-quote-container\">\n      <ThemeProvider theme={theme}>\n        <TableContainer className={classes.container} component={Paper}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableCell colSpan={11} style={{ color: \"#5BBFBA\" }}>\n                <div className=\"title-icon\">\n                  <span>PENDING QUOTES</span>\n                  <span id=\"icon\">\n                    <Link to=\"/detailedquotes\" className=\"icon-link\">\n                      <OpenWithIcon />\n                    </Link>\n                  </span>\n                </div>\n              </TableCell>\n              <TableRow>\n                <TableCell style={{ color: \"#F0CF85\" }}>NAME</TableCell>\n                <TableCell></TableCell>\n                <TableCell style={{ color: \"#F0CF85\" }}>PHONE</TableCell>\n                <TableCell style={{ color: \"#F0CF85\" }}>TO</TableCell>\n                <TableCell style={{ color: \"#F0CF85\" }}>DEPART</TableCell>\n                <TableCell style={{ color: \"#F0CF85\" }}>PRICE</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {pending.map((quote, index) => (\n                <TableRow key={quote.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {quote.first_name}\n                  </TableCell>\n                  <TableCell>{quote.last_name}</TableCell>\n                  <TableCell>{quote.phone_number}</TableCell>\n                  <TableCell>{quote.destination_location}</TableCell>\n                  <TableCell>{quote.depart_date.slice(0, 10)}</TableCell>\n                  <TableCell>${quote.price}</TableCell>\n                  <TableCell>\n                    <Button\n                      onClick={() => moveTask(quote.id)}\n                      onChange={handleChange}\n                      variant=\"contained\"\n                      size=\"large\"\n                      color=\"primary\"\n                      type=\"submit\"\n                    >\n                      CLOSE\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell className=\"icons-style\"></TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </ThemeProvider>\n    </div>\n  );\n}\n","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/CompletedQuotes.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/SideNav.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/DashboardGreeting.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/PotentialRevenue.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/NewLeads.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/DetailedQuotes.jsx",["68"],"import React, { useEffect, useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { SideNav } from \"./SideNav\";\nimport { Header } from \"./Header\";\nimport \"../styles/DetailedQuotes.scss\";\n\n// material ui - table styling\nconst useStyles = makeStyles(() => ({\n  container: {\n    maxHeight: 840,\n  },\n}));\n\n//custom brand colors\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#5BBFBA\",\n    },\n    secondary: {\n      main: \"#5F6CAF\",\n    },\n    text: {\n      primary: \"#A9A9A9\",\n    },\n  },\n});\n\nexport function DetailedQuotes(props) {\n  const classes = useStyles();\n  const [pending, setPending] = useState([]);\n  const [selectedId, setSelectedId] = useState([]);\n\n  const handleChange = (event) => {\n    setSelectedId(event.target.value);\n  };\n\n  // get all pending quotes\n  const getPending = async (event) => {\n    try {\n      const response = await fetch(\"/api/pending\");\n      const jsonData = await response.json();\n      setPending(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  // post quotes - update is_converted from false to true when \"closed\" button is clicked\n  const moveTask = async (quoteId) => {\n    axios\n      .put(`api/quotescompleted/${quoteId}`, {\n        selectedId: quoteId,\n      })\n      .then((res) => {\n        setPending(pending.filter((quote) => quote.id !== quoteId));\n        props.updateCompletedQuotes();\n      })\n      .catch((error) => {\n        console.error(\"Error: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getPending();\n  }, []);\n\n  return (\n    <div className=\"detailed-quote-container\">\n      <div className=\"header-container\">\n        <Header />\n      </div>\n      <div className=\"side-nav-container\">\n        <SideNav />\n      </div>\n      <div className=\"detailed-quote-table\">\n        <ThemeProvider theme={theme}>\n          <TableContainer className={classes.container} component={Paper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableCell\n                  align=\"center\"\n                  colSpan={12}\n                  style={{ color: \"#5BBFBA\" }}\n                >\n                  <span id=\"title\">PENDING QUOTES</span>\n                </TableCell>\n                <TableRow>\n                  <TableCell style={{ color: \"#F0CF85\" }}>CLIENT ID</TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>NAME</TableCell>\n                  <TableCell></TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>PHONE</TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>FROM</TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>TO</TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>DEPART</TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>RETURN</TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>TRAVELERS</TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>\n                    TRANSPORTATION\n                  </TableCell>\n                  <TableCell style={{ color: \"#F0CF85\" }}>PRICE</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {pending.map((quote) => (\n                  <TableRow key={quote.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {quote.client_id}\n                    </TableCell>\n                    <TableCell>{quote.first_name}</TableCell>\n                    <TableCell>{quote.last_name}</TableCell>\n                    <TableCell>{quote.phone_number}</TableCell>\n                    <TableCell>{quote.departure_location}</TableCell>\n                    <TableCell>{quote.destination_location}</TableCell>\n                    <TableCell>{quote.depart_date.slice(0, 10)}</TableCell>\n                    <TableCell>{quote.return_date.slice(0, 10)}</TableCell>\n                    <TableCell>{quote.people}</TableCell>\n                    <TableCell>{quote.transportation}</TableCell>\n                    <TableCell>${quote.price}</TableCell>\n                    <TableCell>\n                      <Button\n                        onClick={() => moveTask(quote.id)}\n                        onChange={handleChange}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        type=\"submit\"\n                      >\n                        CLOSE\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell className=\"icons-style\"></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n        </ThemeProvider>\n      </div>\n    </div>\n  );\n}\n","/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/Revenue.jsx",[],"/Users/kourtneyhuget/Projects/wet-bat-project/client/src/components/TeamChat.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":8,"column":8,"nodeType":"75","messageId":"76","endLine":8,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":9,"column":8,"nodeType":"75","messageId":"76","endLine":9,"endColumn":16},{"ruleId":"73","severity":1,"message":"78","line":10,"column":8,"nodeType":"75","messageId":"76","endLine":10,"endColumn":12},{"ruleId":"73","severity":1,"message":"79","line":42,"column":10,"nodeType":"75","messageId":"76","endLine":42,"endColumn":20},{"ruleId":"73","severity":1,"message":"79","line":43,"column":10,"nodeType":"75","messageId":"76","endLine":43,"endColumn":20},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'selectedId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]